import asyncio
import psycopg2
from aiogram import Router, F, types, Bot
from aiogram.filters import StateFilter
from fake_useragent import UserAgent
from aiogram.types import FSInputFile, InputMediaPhoto
from state_bot import StateEmail, StatePhone, StateNewAdmin, StateDelAdmin
from aiogram.fsm.context import FSMContext
from utils import get_db_connection
from keyboards.inline_kb import shopping, start_kb, cancel_new_admin, base_inline_kb_post_auth
from keyboards.inline_kb import cancel
from dop_func_bot.dop_func import try_write_new_tg_user, check_free_selenium, delete_message
from data_base.aiosqlite_func import (select_registration, insert_registration_data,
                                      insert_edit_start_auth, delete_message_id_registration,
                                      insert_shopping, delete_edit_start_auth, select_edit_start_auth,
                                      state_clear_auth, set_state_auth, check_state, select_admins,
                                      new_admin, select_cp_sms, update_sms_quan, update_cp_quan, insert_edit_wb_auth,
                                      select_edit_products, insert_msd_products, check_new_products, delete_admin)
from data_base.pg_db_func import write_captcha, write_sms_code, select_accept_orders

text_router = Router()
ua = UserAgent(platforms='pc', os=["windows", "macos"], browsers='chrome')


@text_router.message(F.text, StateFilter(StateEmail.email_state))
async def email_text(msd: types.Message, state: FSMContext, bot: Bot):
    email = msd.text.replace(" ", '')
    message = await insert_registration_data(user_id=msd.from_user.id,
                                             message_id=msd.message_id)
    quan_products_accept = select_accept_orders(chat_id=msd.from_user.id)
    if quan_products_accept == []:
        quan_products_accept = 0
    else:
        quan_products_accept = len(quan_products_accept)
    watch = 0
    conn = get_db_connection()
    cur = conn.cursor()
    if "@" in email:
        check_email_list = email.split("@")
        if len(check_email_list[0]) >= 1 and check_email_list[1]:
            cur.execute('select wp_email, is_verified, chat_id from auth_user where wp_email = %(email)s',
                        {'email': email})
            user_email = cur.fetchone()

            if not user_email:
                #–∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø–∏—Å—å –≤ –±–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å time.sleep(60))
                check_auth = await msd.answer("–ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ...‚è≥")
                for i in range(15):
                    if i % 5 == 0:
                        cur.execute('select wp_email, is_verified, chat_id from auth_user where wp_email = %(email)s',
                                    {'email': email})
                        user_email = cur.fetchone()
                        if user_email:
                            if user_email[1] is not None:
                                new_product = await check_new_products(user_id=msd.from_user.id)
                                messages = await select_registration(user_id=msd.from_user.id)
                                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                                try:
                                    await delete_message(chat_id=msd.from_user.id,
                                                         list_message_id=messages + [(check_auth.message_id,)],
                                                         bot=bot)

                                    photo = FSInputFile(path="base_photo/basic_menu.png")
                                    media = InputMediaPhoto(media=photo,
                                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                                     '<b>–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê</b>'),
                                                            parse_mode="HTML")
                                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                           media=media,
                                                                           message_id=messages_4,
                                                                           reply_markup=base_inline_kb_post_auth(
                                                                               quan_products_accept=quan_products_accept,
                                                                               quan_products_not_accept=len(new_product)))
                                    await insert_msd_products(user_id=msd.from_user.id,
                                                              message_id=message.message_id)
                                    conn.close()
                                    await state.clear()
                                except:
                                    await delete_message(chat_id=msd.from_user.id,
                                                         list_message_id=messages + [(check_auth.message_id,)],
                                                         bot=bot)

                                    photo = FSInputFile(path="base_photo/basic_menu.png")
                                    media = InputMediaPhoto(media=photo,
                                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Çüõç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                                     '<b>‚ò∫Ô∏è–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê</b>'),
                                                            parse_mode="HTML")
                                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                           media=media,
                                                                           message_id=messages_4,
                                                                           reply_markup=base_inline_kb_post_auth(
                                                                               quan_products_accept=quan_products_accept,
                                                                               quan_products_not_accept=len(new_product)))

                                    await insert_msd_products(user_id=msd.from_user.id,
                                                              message_id=message.message_id)
                                    conn.close()
                                    await state.clear()
                                return

                            if isinstance(user_email[2], int) and msd.from_user.id != int(user_email[2]):
                                messages = await select_registration(user_id=msd.from_user.id)
                                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                                await delete_message(chat_id=msd.from_user.id,
                                                     list_message_id=messages + [(check_auth.message_id,)],
                                                     bot=bot)
                                await delete_message_id_registration(user_id=msd.from_user.id)
                                try:
                                    photo = FSInputFile(path="base_photo/email_error.png")
                                    media = InputMediaPhoto(media=photo,
                                                            caption=(f'‚òùÔ∏è–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π: {email}\n'
                                                                     f'–ü—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—É\n\n'
                                                                     f'<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                                     '1. mp-keshbek.ru\n'
                                                                     '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                                            parse_mode="HTML")
                                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                           media=media,
                                                                           message_id=messages_4,
                                                                           reply_markup=start_kb())

                                    await insert_msd_products(user_id=msd.from_user.id,
                                                              message_id=message.message_id)
                                except:
                                    photo = FSInputFile(path="base_photo/email_error.png")
                                    media = InputMediaPhoto(media=photo,
                                                            caption=(f'‚òùÔ∏è–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π: {email}\n'
                                                                     f'–ü—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—É\n\n'
                                                                     f'‚ò∫Ô∏è<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                                     '1. mp-keshbek.ru\n'
                                                                     '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                                            parse_mode="HTML")
                                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                           media=media,
                                                                           message_id=messages_4,
                                                                           reply_markup=start_kb())

                                    await insert_msd_products(user_id=msd.from_user.id,
                                                              message_id=message.message_id)

                                conn.close()
                                await state.clear()
                                return
                            break
                    elif i == 14:
                        messages = await select_registration(user_id=msd.from_user.id)
                        messages_4 = await select_edit_products(user_id=msd.from_user.id)
                        await delete_message(chat_id=msd.from_user.id,
                                             list_message_id=messages + [(check_auth.message_id,)],
                                             bot=bot)
                        await delete_message_id_registration(user_id=msd.from_user.id)
                        try:
                            photo = FSInputFile(path="base_photo/email_error_input.png")
                            media = InputMediaPhoto(media=photo,
                                                    caption=(f'üòë<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–æ–π {email} –ø–æ—á—Ç–æ–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–∞–π—Ç–µ mp-keshbek.ru</b>\n\n'
                                                              '<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                              '1. mp-keshbek.ru\n'
                                                              '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                                    parse_mode="HTML")
                            message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                   media=media,
                                                                   message_id=messages_4,
                                                                   reply_markup=start_kb())

                            await insert_msd_products(user_id=msd.from_user.id,
                                                      message_id=message.message_id)
                        except:
                            photo = FSInputFile(path="base_photo/email_error_input.png")
                            media = InputMediaPhoto(media=photo,
                                                    caption=(f'üòë<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–æ–π {email} –ø–æ—á—Ç–æ–π –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–∞–π—Ç–µ mp-keshbek.ru</b>\n\n'
                                                             '<b‚ò∫Ô∏è>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                             '1. mp-keshbek.ru\n'
                                                             '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                                    parse_mode="HTML")
                            message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                                   media=media,
                                                                   message_id=messages_4,
                                                                   reply_markup=start_kb())

                            await insert_msd_products(user_id=msd.from_user.id,
                                                      message_id=message.message_id)

                        conn.close()
                        await state.clear()
                        return
                    watch += 1

                    await asyncio.sleep(2)
                    if watch == 1:
                        check_auth = await bot.edit_message_text(chat_id=msd.from_user.id,
                                                                 text="–ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ...‚è≥‚è≥",
                                                                 message_id=check_auth.message_id)
                    elif watch == 2:
                        check_auth = await bot.edit_message_text(chat_id=msd.from_user.id,
                                                                 text="–ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ...‚è≥‚è≥‚è≥",
                                                                 message_id=check_auth.message_id)
                    elif watch == 3:
                        check_auth = await bot.edit_message_text(chat_id=msd.from_user.id,
                                                                 text="–ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ...‚è≥",
                                                                 message_id=check_auth.message_id)
                        watch -= 3

            elif user_email[1]:
                new_product = await check_new_products(user_id=msd.from_user.id)
                messages = await select_registration(user_id=msd.from_user.id)
                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                try:
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)

                    photo = FSInputFile(path="base_photo/basic_menu.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                     '<b>–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê</b>'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=base_inline_kb_post_auth(
                                                               quan_products_accept=quan_products_accept,
                                                               quan_products_not_accept=len(new_product)))
                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                    conn.close()
                    await state.clear()
                except:
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)

                    photo = FSInputFile(path="base_photo/basic_menu.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Çüõç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                     '<b>–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê‚ò∫Ô∏è</b>'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=base_inline_kb_post_auth(
                                                               quan_products_accept=quan_products_accept,
                                                               quan_products_not_accept=len(new_product)))

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                    conn.close()
                    await state.clear()
                return

            elif isinstance(user_email[2], int) and msd.from_user.id != int(user_email[2]):
                messages = await select_registration(user_id=msd.from_user.id)
                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                await delete_message(chat_id=msd.from_user.id,
                                     list_message_id=messages,
                                     bot=bot)
                await delete_message_id_registration(user_id=msd.from_user.id)
                try:
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(
                                                f'‚òùÔ∏è–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π: {email}\n'
                                                 f'–ü—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—É\n\n'
                                                 '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                except:
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(
                                                f'‚òùÔ∏è–ê–∫–∫–∞—É–Ω—Ç —Å —Ç–∞–∫–æ–π –ø–æ—á—Ç–æ–π: {email}\n'
                                                 f'–ü—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É —Ç–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç—É\n\n'
                                                 '‚ò∫Ô∏è–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)

                conn.close()
                await state.clear()
                return

            else:
                try:
                    print(email, f"{msd.from_user.id}")
                    conn = get_db_connection()
                    cur = conn.cursor()
                    cur.execute("""UPDATE auth_user SET chat_id = %(chat_id)s WHERE wp_email = %(email)s""",
                                {'chat_id': f"{msd.from_user.id}",
                                 'email': email})
                    conn.commit()
                    conn.close()
                except psycopg2.Error as e:
                    print(e)
                message = await msd.answer(text=("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>:\n\n"
                                                 "<b>–ü—Ä–∏–º–µ—Ä –¥–ª—è –†–æ—Å—Å–∏–∏:</b> +79995553322\n"),
                                           reply_markup=cancel(),
                                           parse_mode="HTML")# pass

                await insert_registration_data(user_id=msd.from_user.id,
                                               message_id=message.message_id)
                await state.set_state(StatePhone.phone_state)

    else:
        text_message = ('‚òπÔ∏è–ü–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å—Å –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n\n'
                        '<b>–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É:</b>\n'
                        '<b>–ü—Ä–∏–º–µ—Ä:</b> pepa@example.ru')
        message = await msd.answer(text=text_message,
                                   reply_markup=cancel(),
                                   parse_mode="HTML")  # pass
        await insert_registration_data(user_id=msd.from_user.id,
                                       message_id=message.message_id)
        return


@text_router.message(F.text, StateFilter(StatePhone.phone_state))
async def email_text(msd: types.Message, state: FSMContext, bot: Bot):
    phone = msd.text

    await insert_registration_data(user_id=msd.from_user.id,
                                   message_id=msd.message_id)

    quan_products_accept = select_accept_orders(chat_id=msd.from_user.id)
    if quan_products_accept == []:
        quan_products_accept = 0
    else:
        quan_products_accept = len(quan_products_accept)
    if phone[0:4] == '+375' and len(phone) == 13:
        pass
    elif not phone or phone[0:2] != '+7' or len(phone) != 12:
        text_message = ('‚òπÔ∏è–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n\n'
                        '<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>\n'
                        '<b>–ü—Ä–∏–º–µ—Ä –¥–ª—è –†–æ—Å—Å–∏–∏:</b> +79995553322\n')

        message = await msd.answer(text=text_message,
                                   reply_markup=cancel(),
                                   parse_mode="HTML")# pass
        await insert_registration_data(user_id=msd.from_user.id,
                                       message_id=message.message_id)
        return
    else:
        conn = get_db_connection()
        cur = conn.cursor()
        cur.execute("""UPDATE auth_user SET phone_number = %(phone_number)s WHERE chat_id = %(chat_id)s""",
                    {"phone_number": phone,
                     "chat_id": f'{msd.from_user.id}'})
        conn.commit()
        try:
            cur.execute("SELECT wp_email FROM auth_user WHERE chat_id = %(user_id)s",
                        {"user_id": f"{msd.from_user.id}"})
            email = cur.fetchone()[0]
            situation_status = check_free_selenium(msd.from_user.id, phone, email)
        except Exception as e:
            print(e, phone, msd.text, '3232')
            conn.close()
            await state.clear()
            return

        if isinstance(situation_status, int):

            try:
                print(email, "#########")
                is_success = try_write_new_tg_user(msd.from_user.id, phone, situation_status, email)
                print(is_success)
            except:
                print(phone, msd.text)
                conn.close()
                await state.clear()
                return

            if is_success is False:
                text_message = ('<b>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –≤–æ–∑–º–æ–∂–Ω–∞</b>‚òπÔ∏è\n'
                                '–ë–æ—Ç —É–≤–µ–¥–æ–º–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º–µ.\n\n')#–∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–∫—Å–∏
                admins = await select_admins()
                for admin in admins:
                    try:
                        await bot.send_message(chat_id=admin[0],
                                               text=("–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã"
                                                     " —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è proxy\n\n"
                                                     "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è:\n"
                                                     f"user_name: {msd.from_user.username}\n"
                                                     f"first_name: {msd.from_user.first_name}\n"
                                                     f"last_name: {msd.from_user.last_name}\n"
                                                     f"user_id: {msd.from_user.id}"))
                    except Exception as e:
                        print(f"–î–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ {msd.from_user.id}", e)

                messages = await select_registration(user_id=msd.from_user.id)
                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                await delete_message(chat_id=msd.from_user.id,
                                     list_message_id=messages,
                                     bot=bot)
                await delete_message_id_registration(user_id=msd.from_user.id)
                try:
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(text_message +
                                                '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                                 '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                except:
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(
                                                 '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                                 '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)

                await state.clear()
                cur.execute("""UPDATE auth_user SET chat_id = %(user_id)s, phone_number = %(phone)s
                               WHERE chat_id = %(chat_id)s""",
                            {"chat_id": f'{msd.from_user.id}',
                             "user_id": None,
                             "phone": None}) #–∑–∞—á–∏—â–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á—Ç–æ –± –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏
                conn.commit()
                cur.close()
                await state.clear()
            else:
                text_message = '–ù–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...‚è≥' #–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ edit
                message = await msd.answer(text=text_message)
                await insert_edit_start_auth(user_id=msd.from_user.id,
                                             message_id=message.message_id)
                await state.clear()
        else:
            situation = situation_status
            if situation == "1":
                new_product = await check_new_products(user_id=msd.from_user.id)
                messages = await select_registration(user_id=msd.from_user.id)
                messages_4 = await select_edit_products(user_id=msd.from_user.id)
                try:
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)

                    photo = FSInputFile(path="base_photo/basic_menu.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                     '<b>–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê</b>'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=base_inline_kb_post_auth(
                                                               quan_products_accept=quan_products_accept,
                                                               quan_products_not_accept=len(new_product)))
                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                    conn.close()
                    await state.clear()
                except:
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)

                    photo = FSInputFile(path="base_photo/basic_menu.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=('–í–´ –£–ñ–ï –ê–í–¢–û–†–ò–ó–û–í–ê–ù–´üòä\n\n'
                                                     'üõç–í—Ä–µ–º—è –ø–æ–∫—É–ø–æ–∫ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Çüõç–µ:<a href="https://mp-keshbek.ru/">mp-keshbek.ru</a>\n'
                                                     '<b>–ó–∞ –∫—ç—à–±—ç–∫–æ–º –≤–æ–∑–∞—Ä–∞—â–∞–π—Ç–µ—Å—å –°–Æ–î–ê‚ò∫Ô∏è</b>'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=base_inline_kb_post_auth(
                                                               quan_products_accept=quan_products_accept,
                                                               quan_products_not_accept=len(new_product)))

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                    conn.close()
                    await state.clear()
            elif situation == "2":
                messages = await select_edit_start_auth(user_id=msd.from_user.id)
                await delete_message(chat_id=msd.from_user.id,
                                     list_message_id=messages,
                                     bot=bot)
                await delete_edit_start_auth(user_id=msd.from_user.id)
                message = await msd.answer(text=("–£ –≤–∞—Å —É–∂–µ –Ω–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n–ù—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å...‚è≥"),
                                           parse_mode="HTML")
                await insert_edit_start_auth(user_id=msd.from_user.id,
                                             message_id=message.message_id)
                await state.clear()
            elif situation == "3":
                try:
                    messages = await select_registration(user_id=msd.from_user.id)
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)
                    messages_4 = await select_edit_products(user_id=msd.from_user.id)
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(
                                                '<b>‚òπÔ∏è–û–ë–†–ê–ó–û–í–ê–õ–ê–°–¨ –ù–ï–ë–û–õ–¨–®–ê–Ø –û–ß–ï–†–ï–î–¨ –ù–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ‚òπÔ∏è</b>\n\n'
                                                 '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                                 '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)
                except:
                    messages_4 = await select_edit_products(user_id=msd.from_user.id)
                    messages = await select_registration(user_id=msd.from_user.id)
                    await delete_message(chat_id=msd.from_user.id,
                                         list_message_id=messages,
                                         bot=bot)
                    photo = FSInputFile(path="base_photo/auth.png")
                    media = InputMediaPhoto(media=photo,
                                            caption=(
                                                 '<b>‚òπÔ∏è–û–ë–†–ê–ó–û–í–ê–õ–ê–°–¨ –ù–ï–ë–û–õ–¨–®–ê–Ø –û–ß–ï–†–ï–î–¨ –ù–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–Æ‚òπÔ∏è</b>\n\n'
                                                 '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                                 '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                                 '1. mp-keshbek.ru\n'
                                                 '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                            parse_mode="HTML")
                    message = await bot.edit_message_media(chat_id=msd.from_user.id,
                                                           media=media,
                                                           message_id=messages_4,
                                                           reply_markup=start_kb())

                    await insert_msd_products(user_id=msd.from_user.id,
                                              message_id=message.message_id)

                await state.clear()
            else:
                pass
        conn.close()
        print(phone, msd.from_user.id)


@text_router.message(F.text(), StateFilter(StateNewAdmin.new_admin_state))
async def new_admin_text(msd: types.Message, state: FSMContext):
    data = msd.text
    data = data.replace(" ", '')
    if ',' in data and data.count(',') == 1:
        data = data.split(',')
        try:
            user_id = int(data[0])
            name = str(data[1])
            await new_admin(user_id=user_id,
                            name=name)
            await state.clear()
        except Exception as e:
            await msd.answer(text="–î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ:\n\n"
                                  f"–û–®–ò–ë–ö–ê {e} "
                                  "–ü—Ä–∏–º–µ—Ä: 72336272, AlenaS\n"
                                  "–ì–¥–µ 1 –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ user_id –Ω–æ–≤–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –µ—Å–ª–∏ –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                                  " –≤–≤–µ–¥–µ—Ç –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—É /user_id)\n"
                                  "–ê –≤—Ç–æ—Ä–æ–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ @username)",
                             reply_markup=cancel_new_admin())
    else:
        await msd.answer(text="–î–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–≤–µ—Ä–Ω–æ:\n\n"
                              "–ü—Ä–∏–º–µ—Ä: 72336272, AlenaS\n"
                              "–ì–¥–µ 1 –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ user_id –Ω–æ–≤–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –µ—Å–ª–∏ –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
                              " –≤–≤–µ–¥–µ—Ç –≤ –±–æ—Ç–µ –∫–æ–º–∞–Ω–¥—É /user_id)\n"
                              "–ê –≤—Ç–æ—Ä–æ–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ @username)",
                         reply_markup=cancel_new_admin())


@text_router.message(F.text(), StateFilter(StateDelAdmin.del_admin_state))
async def del_admin_text(msd: types.Message, state: FSMContext):
    data = msd.text
    data = data.replace(" ", '')
    await delete_admin(user_id=msd.from_user.id)
    await state.clear()



#–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º
@text_router.message(F.text)
async def get_captcha(msd: types.Message, bot: Bot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–ø—á–∏.
    """
    state_auth = await check_state(msd.from_user.id)
    print(state_auth)
    if state_auth == "cp":
        await update_cp_quan(msd.from_user.id)
        captcha = msd.text
        await insert_registration_data(user_id=msd.from_user.id,
                                       message_id=msd.message_id)
        try:
            message = await msd.answer(text="–ö–∞–ø—á–∞ –ø–æ–ª—É—á–µ–Ω–∞, –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞...‚åõÔ∏è")
            await insert_edit_wb_auth(user_id=msd.from_user.id,
                                      message_id=message.message_id)
            captcha_iteration = await select_cp_sms(user_id=msd.from_user.id, find_is="cp")
            write_captcha(chat_id=msd.chat.id,
                          captcha=captcha.replace(" ", ''),
                          captcha_iteration=captcha_iteration)
            await state_clear_auth(msd.from_user.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {msd.from_user.id} –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–∞–ø—á–∏ –≤ –±–¥ ", e)

    elif state_auth == "sms":
        code = msd.text.replace(" ", "")
        try:
            int(code)
            check_code = 1
        except:
            check_code = 0

        if check_code == 1:
            if len(msd.text) == 6:
                message = await msd.answer(text="–ö–æ–¥ –ø–æ–ª—É—á–µ–Ω, –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞...‚åõÔ∏è")
                await insert_edit_wb_auth(user_id=msd.from_user.id,
                                          message_id=message.message_id)
                await insert_registration_data(user_id=msd.from_user.id,
                                               message_id=msd.message_id)
                await update_sms_quan(msd.from_user.id)
                sms_iteration = await select_cp_sms(user_id=msd.from_user.id, find_is="sms")
                write_sms_code(chat_id=msd.from_user.id,
                               sms_code=msd.text.replace(" ", ''),
                               code_iteration=sms_iteration)
                await state_clear_auth(msd.from_user.id)
            else:
                await insert_registration_data(user_id=msd.from_user.id,
                                               message_id=msd.message_id)
                message = await msd.answer(text="<b>‚òùÔ∏è–ö–û–î –í–í–ï–î–ï–ù –ù–ï –ö–û–†–†–ï–ö–¢–ù–û</b>‚òùÔ∏è\n"
                                                "–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 6 —Ü–∏—Ñ—Ä\n\n"
                                                "üòå<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ</b>üòå",
                                           parse_mode="HTML")
                await insert_registration_data(user_id=msd.from_user.id,
                                               message_id=message.message_id)
        else:
            await insert_registration_data(user_id=msd.from_user.id,
                                           message_id=msd.message_id)
            message = await msd.answer(text="<b>‚òùÔ∏è–ö–û–î –í–í–ï–î–ï–ù –ù–ï –ö–û–†–†–ï–ö–¢–ù–û</b>‚òùÔ∏è\n"
                                                "–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 6 —Ü–∏—Ñ—Ä\n\n"
                                                "üòå<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ</b>üòå",
                                       parse_mode="HTML")
            await insert_registration_data(user_id=msd.from_user.id,
                                           message_id=message.message_id)

    else:
        await bot.delete_message(chat_id=msd.from_user.id,
                                 message_id=msd.message_id)









