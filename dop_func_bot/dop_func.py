import asyncio

import psycopg2
from fake_useragent import UserAgent
from aiogram import Bot, Router
from data_base.aiosqlite_func import (select_registration, delete_message_id_registration, insert_registration_data,
                                      delete_edit_start_auth, select_edit_start_auth, select_admins, set_state_auth,
                                      state_clear_auth, select_cp_sms, delete_edit_wb_auth, select_edit_wb_auth,
                                      update_resend, delete_sms_cp, select_edit_products, clear_edit_products,
                                      insert_msd_products, check_new_products,
                                      new_insert_or_update_page_products)
from data_base.pg_db_func import clear_db_auth_user, select_accept_orders
from keyboards.inline_kb import start_kb, shopping, base_inline_kb_post_auth, kb_check_order_one, kb_check_order_many
from settings import TG_TOKEN
from utils import get_db_connection
from aiogram.types import FSInputFile, InputMediaPhoto, InputFile, URLInputFile

ua = UserAgent(platforms='pc', os=["windows", "macos"], browsers='chrome')
router_storage = Router()


async def delete_message(chat_id, list_message_id, bot: Bot):
    for message_id in list_message_id:
        print(list_message_id)
        message_id = message_id[0]
        try:
            await bot.delete_message(chat_id=chat_id,
                                     message_id=message_id,
                                     request_timeout=None)
        except:
            continue


def try_write_new_tg_user(chat_id, phone_number, selenium_id, email):
    """
    –ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    """
    conn = get_db_connection()
    cur = conn.cursor()
    cur.execute(f"select proxy_name, proxy_id from auth_user where phone_number = %(phone_number)s",
                {'phone_number': phone_number})
    proxy_data = cur.fetchone()
    print(proxy_data)

    if not proxy_data[0] and not proxy_data[1]:
        cur.execute('select proxy_name, proxy_id from proxy where is_busy is false and is_healthy is true limit 1')
        proxy_data = cur.fetchone()
        print(proxy_data)

    if proxy_data:
        proxy_name, proxy_id = proxy_data
        cur.execute(f'update proxy set is_busy = true where proxy_id = %(proxy_id)s',
                    {'proxy_id': proxy_id})
        cur.execute(f'update selenium_process set is_busy = true where process_id = %(selenium_id)s',
                    {'selenium_id': selenium_id})
        conn.commit()
        data = (str(email), str(chat_id), str(phone_number), int(selenium_id), False, str(proxy_name), str(proxy_id), str(ua.random))
        print(data)

        try:
            print('–ü—Ä–æ—Ü–µ—Å—Å –Ω–∞—á–∞—Ç')
            insert_statement = """
                INSERT INTO auth_user (wp_email, chat_id, phone_number, selenium_id, is_verified, proxy_name, proxy_id, user_agent) 
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
                ON CONFLICT (wp_email) 
                DO UPDATE SET selenium_id = excluded.selenium_id,
                               chat_id = excluded.chat_id,
                               phone_number = excluded.phone_number,
                               is_verified = false,
                               proxy_name = excluded.proxy_name,
                               proxy_id = excluded.proxy_id,
                               user_agent = excluded.user_agent
                """
            cur.execute(insert_statement, data)
            conn.commit()
            conn.close()
        except psycopg2.Error as e:
            print(f"–û—à–∏–±–∫–∞: {e}")

        print('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–∫–æ–Ω—á–µ–Ω ')
        return True
    else:
        conn.close()
        return False


def check_free_selenium(chat_id, phone_number, email=None):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã—Ö Selenium –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    conn = get_db_connection()
    cur = conn.cursor()
    cur.execute('select process_id from selenium_process where is_busy is false order by process_id asc limit 1')
    process_id = cur.fetchone()
    print(process_id)
    if process_id:
        process_id = process_id[0]
    cur.execute(f'select * from auth_user where chat_id = %(chat_id)s and selenium_id > 0',
                {'chat_id': f'{chat_id}'})
    print(cur.fetchone())
    cur.execute(f'select count(*) from auth_user where chat_id = %(chat_id)s and selenium_id > 0',
                {'chat_id': f'{chat_id}'})
    count_open_registration = cur.fetchone()[0]
    print('1,', count_open_registration)
    if email:
        cur.execute(f"select is_verified from auth_user where wp_email = %(email)s",
                    {'email': email})
        print('1,', process_id)
    else:
        cur.execute(f"select is_verified from auth_user where phone_number = %(phone_number)s",
                    {'phone_number': phone_number})
    is_verified = cur.fetchone()
    conn.close()
    if is_verified:
        if is_verified[0] is True:
            return '1' #'–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã'
    if process_id and count_open_registration == 0:
        return process_id
    elif process_id and count_open_registration > 0:
        print(process_id, count_open_registration)
        return '2' #'–£ –≤–∞—Å —É–∂–µ –Ω–∞—á–∞—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n –ù—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∂–¥–æ–∂–¥–∞—Ç—å –¥–æ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è'
    else:
        return '3' #'–í—Å–µ –±—Ä–∞—É–∑–µ—Ä—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–Ω—è—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∑–∂–µ'


#—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ—É–¥–∞—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
#1.–†–∞—Å—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ –ø—Ä–æ–±–ª–µ–º–µ
#2.–í–∑–∞–∏–º–æ—Å–¥–µ–π—Å—Ç–≤–∏–µ —Å aiosql
#3.–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ pg –±–¥ (–∫—Ä–æ–º–µ –≤–Ω–µ—à–Ω–∏—Ö)
async def bad_registration(user_id, errors):
    bot = Bot(token=TG_TOKEN, session=None)

    user_id = int(user_id)
    messages = await select_registration(user_id=user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    if messages_3 != [] and messages_2 != []:
        messages = messages + messages_2 + messages_3
    elif messages_3 == [] and messages_2 != []:
        messages = messages + messages_2
    elif messages_3 != [] and messages_2 == []:
        messages = messages + messages_3
    else:
        messages = messages
    #print(messages)
    await delete_message(chat_id=user_id,
                         list_message_id=messages,
                         bot=bot)

    await delete_message_id_registration(user_id=user_id)
    await delete_edit_start_auth(user_id=user_id)
    await delete_edit_wb_auth(user_id=user_id)
    messages_4 = await select_edit_products(user_id=user_id)
    photo = FSInputFile("base_photo/error_auth.png")
    if messages_4 == None:
        message = await bot.send_photo(chat_id=user_id,
                                       caption=('<b>‚òπÔ∏è–ü–†–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê‚òπÔ∏è</b>\n'
                                               '–ë–æ—Ç —É–∂–µ —É–≤–µ–¥–æ–º–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n'
                                               '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                               '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                               '1. mp-keshbek.ru\n'
                                               '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                       photo=photo,
                                       reply_markup=start_kb(),
                                       parse_mode="HTML")
        await state_clear_auth(user_id=user_id)
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)
    else:
        try:
            media = InputMediaPhoto(media=photo,
                                    caption=('<b>‚òπÔ∏è–ü–†–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê‚òπÔ∏è</b>\n'
                                               '–ë–æ—Ç —É–∂–µ —É–≤–µ–¥–æ–º–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n'
                                               '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                               '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                               '1. mp-keshbek.ru\n'
                                               '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
            await state_clear_auth(user_id=user_id)
        except Exception as e:
            print(e ,'—è —Å–ª–æ–º–∞–ª—Å—è')
            media = InputMediaPhoto(media=photo,
                                    caption=('<b>‚òπÔ∏è–ü–†–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê‚òπÔ∏è</b>\n'
                                             '–ë–æ—Ç —É–∂–µ —É–≤–µ–¥–æ–º–∏–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n'
                                             '<b>üôè–ü–û–ü–†–û–ë–£–ô–¢–ï –ß–£–¢–¨ –ü–û–ó–ñ–ïüôè</b>\n'
                                             '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:‚ò∫Ô∏è\n'
                                             '1. mp-keshbek.ru\n'
                                             '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)

            await state_clear_auth(user_id=user_id)

    admins = await select_admins()
    for admin in admins:
        try:
            await bot.send_message(chat_id=admin[0],
                                   text=("–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã"
                                         " —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π.\n\n"
                                         f"–û—à–∏–±–∫–∞ –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É: {errors}\n"
                                         "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è:\n"
                                         f"user_id: {user_id}"))
        except Exception as e:
            print(f"–î–∞–Ω–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–µ –±—ã–ª–æ –≤—ã—Å–ª–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, —Ç.–∫ {e}")
    await bot.session.close()


async def long_auth(user_id):
    bot = Bot(token=TG_TOKEN, session=None)

    user_id = int(user_id)
    messages = await select_registration(user_id=user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    if messages_3 != []:
        messages = messages + messages_2 + messages_3
    else:
        messages = messages + messages_2

    await delete_message(chat_id=user_id,
                         list_message_id=messages,
                         bot=bot)

    await delete_message_id_registration(user_id=user_id)
    await delete_edit_start_auth(user_id=user_id)
    await delete_edit_wb_auth(user_id=user_id)
    messages_4 = await select_edit_products(user_id=user_id)
    photo = FSInputFile("base_photo/long_auth.png")
    if messages_4 != None:
        message = await bot.send_photo(chat_id=user_id,
                                       photo=photo,
                                       caption=('<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò‚òπÔ∏è</b>\n\n'
                                               '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                               '1. mp-keshbek.ru\n'
                                               '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                       reply_markup=start_kb(),
                                       parse_mode="HTML")
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)
    else:
        try:
            media = InputMediaPhoto(media=photo,
                                    caption=('<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò‚òπÔ∏è</b>\n\n'
                                             '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:\n'
                                             '1. mp-keshbek.ru\n'
                                             '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
        except:
            media = InputMediaPhoto(media=photo,
                                    caption=('<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò‚òπÔ∏è</b>\n\n'
                                             '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö‚ò∫Ô∏è:\n'
                                             '1. mp-keshbek.ru\n'
                                             '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)

    await state_clear_auth(user_id=user_id)
    await bot.session.close()


async def sms_registration(user_id):
    bot = Bot(token=TG_TOKEN, session=None)
    user_id = int(user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    if messages_2 == []:
        if messages_3 == []:
            message = await bot.send_message(chat_id=user_id,
                                             text=('<b>üôÇ–í–ê–ú –í–´–°–õ–ê–ù –ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ØüôÇ</b>\n\n'
                                                   '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                   '–ü—Ä–∏–º–µ—Ä: 777555'),
                                             parse_mode="HTML")
        else:
            message = await bot.edit_message_text(chat_id=user_id,
                                                  text=('<b>üôÇ–í–ê–ú –í–´–°–õ–ê–ù –ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ØüôÇ</b>\n\n'
                                                        '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                        '–ü—Ä–∏–º–µ—Ä: 777555'),
                                                  message_id=messages_3[0][0],
                                                  parse_mode="HTML")
            await delete_edit_wb_auth(user_id=user_id)
    else:
        message = await bot.edit_message_text(chat_id=user_id,
                                              text=('<b>üôÇ–í–ê–ú –í–´–°–õ–ê–ù –ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ØüôÇ</b>\n\n'
                                                    '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                    '–ü—Ä–∏–º–µ—Ä: 777555'),
                                              message_id=messages_2[0][0],
                                              parse_mode="HTML")
        await delete_edit_start_auth(user_id=user_id)
    await set_state_auth(user_id=user_id,
                         state="sms")
    await insert_registration_data(user_id=user_id,
                                   message_id=message.message_id)
    await bot.session.close()


async def new_sms_registration(user_id):
    bot = Bot(token=TG_TOKEN, session=None)
    user_id = int(user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)

    if messages_2 == []:
        if messages_3 == []:
            message = await bot.send_message(chat_id=user_id,
                                             text=('<b>üî∏–ö–û–î –ù–ï –ü–û–î–û–®–ï–õüî∏</b>\n\n'
                                                   '<b>üòå–í–í–ï–î–ò–¢–ï –ö–û–î –ü–û–í–¢–û–†–ù–ûüòå</b>\n\n'
                                                   '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                   '–ü—Ä–∏–º–µ—Ä: 777555'),
                                             parse_mode="HTML")
        else:
            message = await bot.edit_message_text(chat_id=user_id,
                                                  text=('<b>üî∏–ö–û–î –ù–ï –ü–û–î–û–®–ï–õüî∏</b>\n\n'
                                                        '<b>üòå–í–í–ï–î–ò–¢–ï –ö–û–î –ü–û–í–¢–û–†–ù–ûüòå</b>\n\n'
                                                        '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                        '–ü—Ä–∏–º–µ—Ä: 777555'),
                                                  message_id=messages_3[0][0],
                                                  parse_mode="HTML")
            await delete_edit_wb_auth(user_id=user_id)
    else:
        await delete_edit_start_auth(user_id=user_id)
        message = await bot.edit_message_text(chat_id=user_id,
                                              text=('<b>üî∏–ö–û–î –ù–ï –ü–û–î–û–®–ï–õüî∏</b>\n\n'
                                                    '<b>üòå–í–í–ï–î–ò–¢–ï –ö–û–î –ü–û–í–¢–û–†–ù–ûüòå</b>'
                                                    '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</b>\n'
                                                    '–ü—Ä–∏–º–µ—Ä: 777555'),
                                              message_id=messages_2[0][0],
                                              parse_mode="HTML")

    await set_state_auth(user_id=user_id,
                         state="sms")
    await insert_registration_data(user_id=user_id,
                                   message_id=message.message_id)
    await bot.session.close()


async def resend_sms_registration(user_id):
    bot = Bot(token=TG_TOKEN, session=None)
    user_id = int(user_id)
    #message = await bot.send_message(chat_id=user_id,
    #                                 text='<b>‚òπÔ∏è–ö–û–î –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢‚òπÔ∏è</b>',
    #                                 parse_mode="HTML")
    await set_state_auth(user_id=user_id,
                         state="sms")
    #await insert_registration_data(user_id=user_id,
    #                               message_id=message.message_id)
    await bot.session.close()


async def long_captcha_input(user_id):
    bot = Bot(token=TG_TOKEN, session=None)

    user_id = int(user_id)
    messages = await select_registration(user_id=user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    messages_4 = await select_edit_products(user_id=user_id)
    messages = messages + messages_2
    if messages_3 == []:
        messages = messages + messages_2
    else:
        messages = messages + messages_2 + messages_3
    await delete_message(chat_id=user_id,
                         list_message_id=messages,
                         bot=bot)
    await delete_edit_wb_auth(user_id=user_id)
    await delete_message_id_registration(user_id=user_id)
    await delete_edit_start_auth(user_id=user_id)
    photo = FSInputFile("base_photo/long_captcha.png")
    if messages_4 == None:
        message = await bot.send_photo(chat_id=user_id,
                                       caption=('<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –û–ñ–ò–î–ê–ù–ò–Ø –ö–ê–ü–ß–ò, –ê–í–û–†–ò–ó–£–ô–¢–ï–°–¨ –ó–ê–ù–û–í–û‚òπÔ∏è</b>\n\n'
                                                '<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                '1. mp-keshbek.ru\n'
                                                '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                       reply_markup=start_kb(),
                                       photo=photo,
                                       parse_mode="HTML")
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)
    else:
        try:
            media = InputMediaPhoto(media=photo,
                                    caption=(f'<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –û–ñ–ò–î–ê–ù–ò–Ø –ö–ê–ü–ß–ò, –ê–í–û–†–ò–ó–£–ô–¢–ï–°–¨ –ó–ê–ù–û–í–û‚òπÔ∏è</b>\n\n'
                                                    '<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Ö:</b>\n'
                                                    '1. mp-keshbek.ru\n'
                                                    '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
        except:
            media = InputMediaPhoto(media=photo,
                                    caption=(f'<b>‚òπÔ∏è–ü–†–ï–í–´–®–ï–ù–û –í–†–ï–ú–Ø –û–ñ–ò–î–ê–ù–ò–Ø –ö–ê–ü–ß–ò, –ê–í–û–†–ò–ó–£–ô–¢–ï–°–¨ –ó–ê–ù–û–í–û‚òπÔ∏è</b>\n\n'
                                             '<b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ 2-—É—Ö —Å–∞–π—Ç–∞—Öüòä:</b>\n'
                                             '1. mp-keshbek.ru\n'
                                             '2. WB (—á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–π –±–æ—Ç)'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
    await state_clear_auth(user_id=user_id)
    await bot.session.close()


async def captcha_registration(user_id):
    bot = Bot(token=TG_TOKEN, session=None)
    user_id = int(user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    photo = FSInputFile(path=f"captchas/{user_id}.png")
    cp_data = await select_cp_sms(user_id=user_id, find_is="cp")
    resend_data = await select_cp_sms(user_id=user_id, find_is="resend")

    if cp_data != resend_data:
        if messages_2 != [] and messages_3 != []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_2 + messages_3,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£</b>üôÇ\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_start_auth(user_id=user_id)
            await delete_edit_wb_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")

        elif messages_2 != [] and messages_3 == []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_2,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£</b>üôÇ\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_start_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")

        elif messages_2 == [] and messages_3 != []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_3,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£</b>üôÇ\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_wb_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")
        else:
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£</b>üôÇ\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await set_state_auth(user_id=int(user_id), state="cp")

    else:
        if messages_2 != [] and messages_3 != []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_3 + messages_2,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üî∏<b>–ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ù–ï–í–ï–†–ù–´–ô</b>üî∏\n\nüôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£üôÇ</b>\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_start_auth(user_id=user_id)
            await delete_edit_wb_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")
            #await update_resend(user_id=user_id)

        elif messages_2 != [] and messages_3 == []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_2,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üî∏<b>–ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ù–ï–í–ï–†–ù–´–ô</b>üî∏\n\nüôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£üôÇ</b>\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_start_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")
            #await update_resend(user_id=user_id)

        elif messages_2 == [] and messages_3 != []:
            await delete_message(chat_id=user_id,
                                 list_message_id=messages_3,
                                 bot=bot)
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üî∏<b>–ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ù–ï–í–ï–†–ù–´–ô</b>üî∏\n\nüôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£üôÇ</b>\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await delete_edit_wb_auth(user_id=user_id)
            await set_state_auth(user_id=int(user_id), state="cp")
            #await update_resend(user_id=user_id)
        else:
            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption="üî∏<b>–ö–û–î –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –ù–ï–í–ï–†–ù–´–ô</b>üî∏\n\nüôÇ<b>–í–í–ï–î–ò–¢–ï –ö–ê–ü–ß–£üôÇ</b>\n"
                                                   "–ü—Ä–∏–º–µ—Ä: PS1VG4",
                                           parse_mode="HTML")
            await set_state_auth(user_id=int(user_id), state="cp")
            #await update_resend(user_id=user_id)

    await insert_registration_data(user_id=user_id,
                                   message_id=message.message_id)
    await bot.session.close()


async def good_auth(user_id):
    bot = Bot(token=TG_TOKEN, session=None)

    user_id = int(user_id)
    messages = await select_registration(user_id=user_id)
    messages_2 = await select_edit_start_auth(user_id=user_id)
    messages_3 = await select_edit_wb_auth(user_id=user_id)
    messages_4 = await select_edit_products(user_id=user_id)
    print(messages_4)
    new_product = await check_new_products(user_id=user_id)
    quan_products_accept = select_accept_orders(chat_id=user_id)
    if quan_products_accept == []:
        quan_products_accept = 0

    else:
        quan_products_accept = len(quan_products_accept)


    if messages_4 != None:
        await delete_message(chat_id=user_id,
                             list_message_id=messages + messages_2 + messages_3,
                             bot=bot)
        await delete_message_id_registration(user_id=user_id)
        await delete_edit_start_auth(user_id=user_id)
        await delete_edit_wb_auth(user_id=user_id)
        photo = FSInputFile(path="base_photo/good_auth.png")
        try:
            media = InputMediaPhoto(media=photo,
                                    caption='<i>–ï—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ wb –±—É–¥–µ—Ç'
                                              ' —Å–±—Ä–æ—à–µ–Ω–∞, –±–æ—Ç –≤–∞—Å –æ–± —ç—Ç–æ–º —É–≤–µ–¥–æ–º–∏—Ç</i>.\n\n'
                                              '‚ùóÔ∏è<b>–í–ê–ñ–ù–û</b>‚ùó –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ mp-keshbek.ru –í–∞–º –ø—Ä–∏–¥–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –±–æ—Ç'
                                              ' —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n\n'
                                              '<b>üõç–ü–û–†–ê –ó–ê –ü–û–ö–£–ü–ö–ê–ú–òüõç</b>',
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=base_inline_kb_post_auth(quan_products_accept=quan_products_accept,
                                                                                         quan_products_not_accept=len(new_product)))
        except:
            media = InputMediaPhoto(media=photo,
                                    caption='<i>–ï—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ wb –±—É–¥–µ—Ç'
                                            ' —Å–±—Ä–æ—à–µ–Ω–∞, –±–æ—Ç –≤–∞—Å –æ–± —ç—Ç–æ–º —É–≤–µ–¥–æ–º–∏—Ç</i>.‚ò∫Ô∏è\n\n'
                                            '‚ùóÔ∏è<b>–í–ê–ñ–ù–û</b>‚ùó –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ mp-keshbek.ru –í–∞–º –ø—Ä–∏–¥–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –±–æ—Ç'
                                            ' —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n\n'
                                            '<b>üõç–ü–û–†–ê –ó–ê –ü–û–ö–£–ü–ö–ê–ú–òüõç</b>',
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=base_inline_kb_post_auth(quan_products_accept=quan_products_accept,
                                                                                         quan_products_not_accept=len(
                                                                                             new_product)))
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)

    else:

        await delete_message(chat_id=user_id,
                             list_message_id=messages + messages_2 + messages_3,
                             bot=bot)
        await delete_message_id_registration(user_id=user_id)
        await delete_edit_start_auth(user_id=user_id)
        await delete_edit_wb_auth(user_id=user_id)
        photo = FSInputFile(path="base_photo/good_auth.png")
        message = await bot.send_photo(chat_id=user_id,
                                       caption='<i>–ï—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ wb –±—É–¥–µ—Ç'
                                               ' —Å–±—Ä–æ—à–µ–Ω–∞, –±–æ—Ç –≤–∞—Å –æ–± —ç—Ç–æ–º —É–≤–µ–¥–æ–º–∏—Ç</i>.\n\n'
                                               '‚ùóÔ∏è<b>–í–ê–ñ–ù–û</b>‚ùó –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ mp-keshbek.ru –í–∞–º –ø—Ä–∏–¥–µ—Ç –≤ –¥–∞–Ω–Ω—ã–π –±–æ—Ç'
                                               ' —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n\n'
                                               '<b>üõç–ü–û–†–ê –ó–ê –ü–û–ö–£–ü–ö–ê–ú–òüõç</b>',
                                       parse_mode="HTML",
                                       photo=photo,
                                       reply_markup=base_inline_kb_post_auth(quan_products_accept=quan_products_accept,
                                                                             quan_products_not_accept=len(new_product)))
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)

    await state_clear_auth(user_id=user_id)
    await delete_sms_cp(user_id=user_id)
    await bot.session.close()


async def new_product_send_users(user_id):#–¥–æ–±–∞–≤–∏—Ç—å edit
    bot = Bot(token=TG_TOKEN, session=None)
    messages_4 = await select_edit_products(user_id=user_id)
    new_product = await check_new_products(user_id=user_id)
    last_new_product = new_product[0]
    #print(new_product, "#################################################################################################")
    photo = last_new_product[1]
    order_id = last_new_product[2]
    article = last_new_product[3]
    page = last_new_product[4]
    position = last_new_product[5]
    wb_search_url = last_new_product[6]
    quan_products_accept = select_accept_orders(chat_id=user_id)
    if quan_products_accept == []:
        quan_products_accept = 0
    else:
        quan_products_accept = len(quan_products_accept)

    if len(new_product) == 1:
        try:
            print(1)
            photo = URLInputFile(photo)
            print(2)
            media = InputMediaPhoto(media=photo,
                                    caption=(f'<b>–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</b> {order_id}\n'
                                             f'<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {article}\n'
                                             f'<b>–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {page}\n'
                                             f'<b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {position}\n'
                                             f"<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞:</b> <a href='{wb_search_url}'>—Å—Å—ã–ª–∫–∞</a>\n\n"
                                             f'<b>–°–æ–≤–µ—Ç:</b> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞.'
                                             f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ.\n'
                                             f'<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ–≤–∞—Ä –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –µ–≥–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞!</i>'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=kb_check_order_one(quan_products_accept=quan_products_accept,
                                                                                   user_id=user_id,
                                                                                   order_id=order_id))
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
        except Exception as e:
            print(e)

            photo = URLInputFile(photo)

            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           caption=(f'<b>–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</b> {order_id}\n'
                                                    f'<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {article}\n'
                                                    f'<b>–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {page}\n'
                                                    f'<b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {position}\n'
                                                    f"<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞:</b> <a href='{wb_search_url}'>—Å—Å—ã–ª–∫–∞</a>\n\n"
                                                    f'<b>–°–æ–≤–µ—Ç:</b> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞.'
                                                    f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ.\n'
                                                    f'<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ–≤–∞—Ä –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –µ–≥–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞!</i>'),
                                           parse_mode="HTML",
                                           reply_markup=kb_check_order_one(quan_products_accept=quan_products_accept,
                                                                           user_id=user_id,
                                                                           order_id=order_id))
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)

    else:
        try:
            quantity_products = len(new_product)

            photo = URLInputFile(photo)

            media = InputMediaPhoto(media=photo,
                                    caption=(f'<b>–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</b> {order_id}\n'
                                             f'<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {article}\n'
                                             f'<b>–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {page}\n'
                                             f'<b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {position}\n'
                                             f"<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞:</b> <a href='{wb_search_url}'>—Å—Å—ã–ª–∫–∞</a>\n\n"
                                             f'<b>–°–æ–≤–µ—Ç:</b> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞.'
                                             f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ.\n'
                                             f'<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ–≤–∞—Ä –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –µ–≥–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞!</i>'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=kb_check_order_many(quan_products_accept=quan_products_accept,
                                                                                    user_id=user_id,
                                                                                    order_id=order_id,
                                                                                    inline_page=f"1/{quantity_products}"))
            await new_insert_or_update_page_products(user_id=user_id)
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
        except Exception as e:

            quantity_products = len(new_product)

            photo = URLInputFile(photo)

            message = await bot.send_photo(chat_id=user_id,
                                           photo=photo,
                                           reply_markup=kb_check_order_many(quan_products_accept=quan_products_accept,
                                                                            user_id=user_id,
                                                                            order_id=order_id,
                                                                            inline_page=f"1/{quantity_products}"),
                                           caption=(f'<b>–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</b> {order_id}\n'
                                                    f'<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {article}\n'
                                                    f'<b>–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {page}\n'
                                                    f'<b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {position}\n'
                                                    f"<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞:</b> <a href='{wb_search_url}'>—Å—Å—ã–ª–∫–∞</a>\n\n"
                                                    f'<b>–°–æ–≤–µ—Ç:</b> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞.'
                                                    f'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –µ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ.\n'
                                                    f'<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ–≤–∞—Ä –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –µ–≥–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞!</i>'),
                                           parse_mode="HTML")
            await new_insert_or_update_page_products(user_id=user_id)
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)

    news = await bot.send_message(chat_id=user_id,
                                  text="‚ùóÔ∏è–£ –í–ê–° –ù–û–í–´–ô –ó–ê–ö–ê–ó‚ùóÔ∏è")
    await asyncio.sleep(10)
    await bot.delete_message(chat_id=user_id,
                             message_id=news.message_id)
    await bot.session.close()


async def restart_auth(user_id):
    print(user_id,  type(user_id))
    bot = Bot(token=TG_TOKEN, session=None)
    messages_4 = await select_edit_products(user_id=user_id)
    await state_clear_auth(int(user_id))
    await delete_sms_cp(int(user_id))
    try:
        try:
            photo = FSInputFile("base_photo/resend_auth.png")
            media = InputMediaPhoto(media=photo,
                                    caption=(f'C–±—Ä–æ—à–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ WB.\n'
                                             f'–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–Ω–æ–≤–æ‚ò∫Ô∏è'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)
        except Exception as e:
            print(e)
            photo = FSInputFile("base_photo/resend_auth.png")
            media = InputMediaPhoto(media=photo,
                                    caption=(f'C–±—Ä–æ—à–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ WB‚ò∫Ô∏è.\n'
                                             f'–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–Ω–æ–≤–æ‚ò∫Ô∏è'),
                                    parse_mode="HTML")
            message = await bot.edit_message_media(chat_id=user_id,
                                                   media=media,
                                                   message_id=messages_4,
                                                   reply_markup=start_kb())
            await insert_msd_products(user_id=user_id,
                                      message_id=message.message_id)

    except Exception as e:
        print(e)
        photo = FSInputFile("base_photo/resend_auth.png")
        message = await bot.send_photo(chat_id=user_id,
                                       photo=photo,
                                       caption=(f'C–±—Ä–æ—à–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ WB.\n'
                                                f'–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–Ω–æ–≤–æ‚ò∫Ô∏è'),
                                       parse_mode="HTML",
                                       reply_markup=start_kb())
        await insert_msd_products(user_id=user_id,
                                  message_id=message.message_id)
    clear_db_auth_user(str(user_id))
    await bot.session.close()








# user_id, order_id, article, page, position, wb_search_url

# order_tg_message = (f'<b>–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</b> {order_id}\n'
#                    f'<b>–ê—Ä—Ç–∏–∫—É–ª:</b> {link_product_id}\n'
#                    f'<b>–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</b> {page}\n'
#                    f'<b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∫:</b> {position}\n\n'
#                    f'<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–∞:</b> <a href={wb_search_url}>—Å—Å—ã–ª–∫–∞</a>\n\n'
#                    f'<i>–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ–≤–∞—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ —Å—Å—ã–ª–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –µ–≥–æ'
#                    f' –Ω–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö</i>')

# bot.send_message(chat_id, base_order_tg_message,  parse_mode="HTML")
# bot.send_photo(chat_id, image_link, caption=order_tg_message)






